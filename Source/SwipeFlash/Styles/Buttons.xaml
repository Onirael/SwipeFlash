<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SwipeFlash"
                    xmlns:System="clr-namespace:System;assembly=mscorlib">

    <!-- Regular button -->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundVeryDarkBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="FontFamily" Value="{StaticResource LGCRegular}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}"/>

        <Setter Property="Padding" Value="50 10"/>
        <Setter Property="Margin" Value="0 10"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True" 
                            CornerRadius="10"
                            RenderTransformOrigin=".5 .5">

                        <Border.Effect>
                            <DropShadowEffect Opacity="0.2" ShadowDepth="0" BlurRadius="5"/>
                        </Border.Effect>

                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform x:Name="buttonScaleTransform"/>
                            </TransformGroup>
                        </Border.RenderTransform>

                        <Grid>
                            <!-- Button Text -->
                            <TextBlock x:Name="contentPresenter" Text="{TemplateBinding Content}"
                                   Focusable="False"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   FontSize="{TemplateBinding FontSize}"
                                   Margin="{TemplateBinding Padding}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1.1" Duration="0:0:0.05"/>
                                    <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1.1" Duration="0:0:0.05"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.05"/>
                                    <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.05"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To=".9" Duration="0:0:0.05"/>
                                    <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To=".9" Duration="0:0:0.05"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.05"/>
                                    <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.05"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource ForegroundDarkBrush}"/>
                            <Setter Property="Foreground" Value="#FF838383"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>            
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsDefault" Value="True">
                <Setter Property="Background" Value="{StaticResource LightBlueBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource BackgroundVeryLightBrush}"/>
            </Trigger>
        </Style.Triggers>
        
    </Style>

    <!-- Borderless icon button -->
    <Style x:Key="BorderlessIconButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Padding" Value="10"/>

        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}"/>        
        <Setter Property="Margin" Value="0 10"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Name="container"
                            CornerRadius="{Binding ActualWidth, ElementName=container}"
                            Height="{Binding ActualWidth, ElementName=container}">


                        <Border.Tag>
                            <System:Double>0.0</System:Double>
                        </Border.Tag>
                        
                        <Border.Background>
                            <SolidColorBrush>
                                <SolidColorBrush.Color>
                                    <MultiBinding Converter="{local:ColorLerpConverter}">
                                        <!-- Lerp colors -->
                                        <Binding Path="{TemplateBinding Background}"/>
                                        <Binding>
                                            <Binding.Source>
                                                <StaticResource ResourceKey="ForegroundDark"/>
                                            </Binding.Source>
                                        </Binding>
                                        <!-- Lerp scalar -->
                                        <Binding Path="Tag" ElementName="container"/>
                                    </MultiBinding>
                                </SolidColorBrush.Color>
                            </SolidColorBrush>
                            
                        </Border.Background>
                        
                        <Viewbox>
                            <!-- Button Text -->
                            <TextBlock x:Name="contentPresenter" Text="{TemplateBinding Content}"
                                       Focusable="False"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                       FontSize="{TemplateBinding FontSize}"
                                       Margin="{TemplateBinding Padding}"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                
                                <TextBlock.Tag>
                                    <System:Double>0.0</System:Double>
                                </TextBlock.Tag>

                                <TextBlock.Foreground>
                                    <SolidColorBrush>
                                        <SolidColorBrush.Color>
                                            <MultiBinding Converter="{local:ColorLerpConverter}">
                                                <!-- Lerp colors -->
                                                <Binding Path="{TemplateBinding Foreground}"/>
                                                <Binding>
                                                    <Binding.Source>
                                                        <StaticResource ResourceKey="ForegroundVeryDarkBrush"/>
                                                    </Binding.Source>
                                                </Binding>
                                                <!-- Lerp scalar -->
                                                <Binding Path="Tag" ElementName="container"/>
                                            </MultiBinding>
                                        </SolidColorBrush.Color>
                                    </SolidColorBrush>
                                </TextBlock.Foreground>
                                
                            </TextBlock>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="container" 
                                                     Storyboard.TargetProperty="Tag" 
                                                     To="1" 
                                                     Duration="0:0:0.05"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="container" 
                                                     Storyboard.TargetProperty="Tag" 
                                                     To="0" 
                                                     Duration="0:0:0.05"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Tag"
                                                     Storyboard.TargetName="contentPresenter"
                                                     To="1" 
                                                     Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Tag" 
                                                     Storyboard.TargetName="contentPresenter"
                                                     To="0" 
                                                     Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource ForegroundDarkBrush}"/>
                            <Setter Property="Foreground" Value="#FF838383"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsDefault" Value="True">
                <Setter Property="Background" Value="{StaticResource LightBlueBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource BackgroundVeryLightBrush}"/>
            </Trigger>
        </Style.Triggers>

    </Style>
    
    <!-- Round icon button -->
    <Style x:Key="RoundIconButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundVeryDarkBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="30"/>

        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarger}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True" 
                            CornerRadius="{Binding ActualHeight, ElementName=border}"
                            RenderTransformOrigin=".5 .5"
                            Width="{Binding ActualHeight, ElementName=border}">

                        <Border.Effect>
                            <DropShadowEffect Opacity="0.2" ShadowDepth="0" BlurRadius="5"/>
                        </Border.Effect>

                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform x:Name="buttonScaleTransform"/>
                            </TransformGroup>
                        </Border.RenderTransform>

                        <Viewbox>
                            <Border Padding="15">
                                <!-- Button Text -->
                                <TextBlock x:Name="contentPresenter" Text="{TemplateBinding Content}"
                                   Focusable="False"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   FontSize="{TemplateBinding FontSize}"
                                   Margin="{TemplateBinding Padding}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1.1" Duration="0:0:0.05"/>
                                    <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1.1" Duration="0:0:0.05"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.05"/>
                                    <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.05"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To=".9" Duration="0:0:0.05"/>
                                    <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To=".9" Duration="0:0:0.05"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.05"/>
                                    <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.05"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource ForegroundDarkBrush}"/>
                            <Setter Property="Foreground" Value="#FF838383"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Undo button -->
    <Style x:Key="UndoButton" TargetType="{x:Type Button}" BasedOn="{StaticResource RoundIconButton}">
        <Setter Property="Content" Value="{StaticResource FontAwesome_Undo}"/>
        <Setter Property="Foreground" Value="{StaticResource SwipeFlashOrangeBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True" 
                            CornerRadius="{Binding ActualHeight, ElementName=border}"
                            RenderTransformOrigin=".5 .5"
                            Width="{Binding ActualHeight, ElementName=border}">

                            <Border.Effect>
                                <DropShadowEffect Opacity="0.2" ShadowDepth="0" BlurRadius="5"/>
                            </Border.Effect>

                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform x:Name="buttonScaleTransform"/>
                                    <RotateTransform x:Name="buttonRotateTransform"/>
                                </TransformGroup>
                            </Border.RenderTransform>

                            <Viewbox>
                                <Border Padding="15">
                                    <!-- Button Text -->
                                    <TextBlock x:Name="contentPresenter" Text="{TemplateBinding Content}"
                                       Focusable="False"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                       FontSize="{TemplateBinding FontSize}"
                                       Margin="{TemplateBinding Padding}"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                        </Viewbox>
                        </Border>
                        <ControlTemplate.Triggers>

                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1.1" Duration="0:0:0.05"/>
                                        <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1.1" Duration="0:0:0.05"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.05"/>
                                        <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.05"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="PreviewMouseDown">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To=".9" Duration="0:0:0.05"/>
                                        <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To=".9" Duration="0:0:0.05"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="PreviewMouseUp">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttonRotateTransform" Storyboard.TargetProperty="(RotateTransform.Angle)" From="0" To="-360" Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.05"/>
                                        <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.05"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{StaticResource ForegroundDarkBrush}"/>
                                <Setter Property="Foreground" Value="#FF838383"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Settings button -->
    <Style x:Key="SettingsButton" TargetType="{x:Type Button}" BasedOn="{StaticResource RoundIconButton}">
        <Setter Property="Content" Value="{StaticResource FontAwesome_Settings}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True" 
                            CornerRadius="{Binding ActualHeight, ElementName=border}"
                            RenderTransformOrigin=".5 .5"
                            Width="{Binding ActualHeight, ElementName=border}">

                        <Border.Effect>
                            <DropShadowEffect Opacity="0.2" ShadowDepth="0" BlurRadius="5"/>
                        </Border.Effect>

                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform x:Name="buttonScaleTransform"/>
                                <RotateTransform x:Name="buttonRotateTransform"/>
                            </TransformGroup>
                        </Border.RenderTransform>

                        <Viewbox>
                            <Border Padding="15">
                                <!-- Button Text -->
                                <TextBlock x:Name="contentPresenter" Text="{TemplateBinding Content}"
                                       Focusable="False"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                       FontSize="{TemplateBinding FontSize}"
                                       Margin="{TemplateBinding Padding}"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1.1" Duration="0:0:0.05"/>
                                    <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1.1" Duration="0:0:0.05"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.05"/>
                                    <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.05"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To=".9" Duration="0:0:0.05"/>
                                    <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To=".9" Duration="0:0:0.05"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="buttonRotateTransform" Storyboard.TargetProperty="(RotateTransform.Angle)" From="0" To="60" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.05"/>
                                    <DoubleAnimation Storyboard.TargetName="buttonScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.05"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource ForegroundDarkBrush}"/>
                            <Setter Property="Foreground" Value="#FF838383"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>